<?php

/**
 * Class responsible for handling `form_answers_attributes` MySQL table
 */
class formAnswersAttributes extends eZPersistentObject
{
    /**
     * MySQL table definition
     * @return array
     */
    public static function definition()
    {
        return array(
            'fields' => array(
                'id'                => array( 'name'     => 'id',
                                              'datatype' => 'integer',
                                              'required' => true ),
                 'answer_id'        => array( 'name'     => 'answer_id',
                                              'datatype' => 'integer',
                                              'required' => true ),
                 'attribute_id'     => array( 'name'     => 'attribute_id',
                                              'datatype' => 'integer',
                                              'required' => true ),
                 'answer'           => array( 'name'     => 'answer',
                                              'datatype' => 'string',
                                              'required' => true )
            ),
            'keys'                  => array( 'id' ),
            'increment_key'         => 'id',
            'class_name'            => 'formAnswersAttributes',
            'sort'                  => array( 'id' => 'asc' ),
            'name'                  => 'form_answers_attributes',
            'function_attributes'   => array( 'structure' => 'getStructure' )
        );
    }

    /**
     * Add a single answer attribute into database
     * @param int $answer_id
     * @param int $attribute_id
     * @param string $value
     * @return \self
     */
    public static function addNewAttribute( $answer_id, $attribute_id, $value )
    {
        $object = new self( array(
            'answer_id'     => $answer_id,
            'attribute_id'  => $attribute_id,
            'answer'        => $value
        ) );

        $object->store();
        return $object;
    }

    /**
     * Method adds a bunch or attributes provided in $data array.
     * @param array $data - it's generated by FormMakerFunctionCollection::getDataToSend method
     * @param int $answer_id
     * @return boolean
     * @throws UnexpectedValueException
     */
    public static function addAttributes( $data, $answer_id )
    {
        $db = eZDB::instance();
        try
        {
            $db->begin();
            foreach ( $data['data'] as $page )
            {
                foreach ( $page['attributes'] as $attribute )
                {
                    if ( !self::addNewAttribute( $answer_id, $attribute['id'], (string)$attribute['value'] ) )
                    {
                        throw new UnexpectedValueException( 'Cannot add new attribute' );
                    }
                }
            }
        }
        catch ( Exception $e )
        {
            $db->rollback();
            return false;
        }

        $db->commit();
        return true;
    }

    /**
     * Method returns all attributes for given answer
     * @param int $answer_id
     * @return array
     */
    public static function getAttributes( $answer_id )
    {
        return self::fetchObjectList( self::definition(), null, array( 'answer_id' => $answer_id ) );
    }

    /**
     * Returns the attribute object which is a parent of current answer
     * @return type
     */
    public function getStructure()
    {
        return formAttributes::getAttribute( $this->attribute( 'attribute_id' ) );
    }
}